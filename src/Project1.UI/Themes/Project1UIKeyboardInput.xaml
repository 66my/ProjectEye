<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Project1.UI.Controls"
                    xmlns:cmd="clr-namespace:Project1.UI.Controls.Commands"
                    xmlns:converter="clr-namespace:Project1.UI.Controls.Converters"
                    >


    <Style TargetType="{x:Type controls:Project1UIKeyboardInput}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Width"
          Value="120" />
        <Setter Property="Height"
          Value="23" />
        <Setter Property="BorderThickness" Value="{DynamicResource InputThickness}"/>
        <Setter Property="Foreground" Value="{DynamicResource InputForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorderBrush}"/>
        <Setter Property="InputMethod.IsInputMethodEnabled" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Project1UIKeyboardInput}">
                    <Border
                        x:Name="Border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>

                            </Grid.ColumnDefinitions>
                            <Grid>
                                <TextBlock x:Name="PTEXT" Text="请按下按键" HorizontalAlignment="Center" Visibility="Collapsed"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource InputIconForeground}"/>
                                <ContentPresenter HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                                          SnapsToDevicePixels="False"
                                          Content="{TemplateBinding KeyText}"
                                          />
                            </Grid>
                            <Button
                                x:Name="ClearButton"
                                ToolTip="清除按键"
                                Visibility="Visible"
                                Grid.Column="1"
                                Focusable="False"
                               Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                                    
                                                    Style="{DynamicResource WindowSystemButton}"
                                                    Content="&#xE894;"
                                                    Command="{x:Static cmd:Project1UIInputCommands.ClearTextCommand}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <!--判断是否有按键-->
                        <DataTrigger Binding="{Binding Path=KeyText, RelativeSource={RelativeSource Mode=Self}}" Value="">
                            <Setter TargetName="PTEXT" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ClearButton" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <!--样式-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource InputEnterBorderBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource InputFocusedBorderBrush}"/>
                        </MultiTrigger>
          
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>




</ResourceDictionary>