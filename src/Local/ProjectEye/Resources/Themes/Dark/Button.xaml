<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Project1.UI.Controls;assembly=Project1.UI"
                    >


    <!--窗口标题栏系统按钮-->
    <Style x:Key="WindowSystemButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="/Project1.UI;component/Assets/IconFonts/#Segoe MDL2 Assets"/>
        <Setter Property="Foreground" Value="#d8d8d8"/>
        <!--<Setter Property="FontWeight" Value="Bold"/>-->
        <Setter Property="FontSize" Value="10"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="true">
                        <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}" />
                            <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}"/>-->
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}" />
                            <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <!--<Setter TargetName="Chrome" Property="BorderBrush" Value="{DynamicResource Accent}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--窗口标题栏LOGO按钮-->
    <Style x:Key="WindowSystemLogoButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ThemeBrush}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>

        <!--<Setter Property="FontFamily" Value="/Project1.UI;component/Assets/IconFonts/#Segoe MDL2 Assets"/>-->
        <!--<Setter Property="Foreground" Value="#272727"/>-->
        <!--<Setter Property="FontWeight" Value="Bold"/>-->
        <!--<Setter Property="FontSize" Value="10"/>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="true">
                        <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}" />
                            <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}"/>-->
                            <Setter Property="Foreground" Value="{DynamicResource ButtonHoverForeground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}" />
                            <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <!--<Setter TargetName="Chrome" Property="BorderBrush" Value="{DynamicResource Accent}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--基础按钮-->
    <Style x:Key="basic" TargetType="{x:Type controls:Project1UIButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="{DynamicResource BasicButtonThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BasicButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource BasicButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource BasicButtonForeground}" />
        <Setter Property="CornerRadius" Value="{DynamicResource BasicButtonCornerRadius}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height"
          Value="28" />
        <Setter Property="Width"
          Value="90" />
        <Setter Property="IconSize" Value="12" />

        <Setter Property="SnapsToDevicePixels" Value="True" />


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Project1UIButton}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Padding="{TemplateBinding Padding}"
                        
                        >
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="#2f2e41"/>
                        </TextBlock.Foreground>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" />
                                    <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{DynamicResource BasicButtonHoverBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#4F6BED" />
                                        </ColorAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>



                        <Grid
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           
                                    >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>

                            </Grid.ColumnDefinitions>


                            <ContentPresenter 
                                        
                                        x:Name="IconContent"
                                        Grid.Column="1"
                               
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>


                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--默认按钮-->
    <Style x:Key="default" TargetType="{x:Type controls:Project1UIButton}">

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ButtonCornerRadius}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height"
          Value="28" />
        <Setter Property="Width"
          Value="90" />
        <Setter Property="IconSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="SnapsToDevicePixels" Value="True" />


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Project1UIButton}">

                    <Border
                        x:Name="Border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Padding="{TemplateBinding Padding}"
                        
                        >
                        <Border.Background>
                            <SolidColorBrush x:Name="ButtonBackground" Color="{DynamicResource ThemeColor}" Opacity="1"/>
                        </Border.Background>
                        <Border.Effect>
                            <DropShadowEffect x:Name="ButtonEffect" Direction="270" ShadowDepth="4" BlurRadius="10.8" Opacity="0"/>
                        </Border.Effect>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" />
                                    <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{DynamicResource HoverColor}" />
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>

                            </Grid.ColumnDefinitions>


                            <ContentPresenter 
                                        
                                        x:Name="IconContent"
                                        Grid.Column="1"
                               
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource default}" TargetType="{x:Type controls:Project1UIButton}"></Style>

    <Style x:Key="tip_yes" BasedOn="{StaticResource default}" TargetType="{x:Type controls:Project1UIButton}"></Style>
    <Style x:Key="tip_no" BasedOn="{StaticResource basic}" TargetType="{x:Type controls:Project1UIButton}"></Style>
</ResourceDictionary>