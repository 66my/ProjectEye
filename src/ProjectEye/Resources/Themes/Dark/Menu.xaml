<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
    <!--#region Menu-->
    <Style x:Key="{x:Type Menu}"
       TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="Background"
          Value="Black" />
        <Setter Property="BorderThickness"
          Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">

                        <StackPanel ClipToBounds="True"
                      Orientation="Horizontal"
                      IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#region MenuItem-->

    <!--分割线-->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
        <Setter Property="Height"
          Value="1" />
        <Setter Property="Margin"
          Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <!--<Border BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFDEDEDE"/>
                        </Border.BorderBrush>
                    </Border>-->
                    <Rectangle Fill="#FFDEDEDE"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader 顶部一级菜单栏 -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Padding="0" Background="Black">
            <Grid>
                <ContentPresenter Margin="10,4"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <Popup x:Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade"
                       ScrollViewer.VerticalScrollBarVisibility="Hidden">
                    <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="1"
                                Background="White"
                                BorderBrush="{DynamicResource ThemeBrush}"
                                Margin="10"
                                CornerRadius="0"
                               
                >
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="11" Opacity="0.2" Direction="218" RenderingBias="Quality" ShadowDepth="1"/>
                        </Border.Effect>

                        <ScrollViewer CanContentScroll="True"
                       >
                            <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
             Value="true">
                <Setter TargetName="Popup"
              Property="PopupAnimation"
              Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter TargetName="Border"
              Property="BorderBrush"
              Value="Transparent" />
                <Setter Property="Background"
              TargetName="Border" Value="#212121">

                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                <!--<Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="0,0,4,4" />-->
                <!--<Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,0,0,20" />-->
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="False">
                <Setter Property="Foreground" Value="#ccc">

                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border" Value="red">

                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="False">
                <Setter Property="Foreground" Value="#ccc">

                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
         Background="Black"
                    MinWidth="150"
                    Padding="0,6">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                        
                        VerticalAlignment="Center"
                                      
                                      HorizontalAlignment="Center"
                        ContentSource="Icon" />
                <Rectangle x:Name="CheckMark"
                           Grid.Column="1"
                           Fill="{DynamicResource ThemeBrush}"
                           Width="5"
                           Height="5"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Visibility="Hidden"
                           SnapsToDevicePixels="True"/>
                <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="2"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                 Grid.Column="3"
                               FontWeight="Normal"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="0"
                              
                 DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />
            <!--<Trigger Property="Icon"
             Value="{x:Null}">
                    <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
                </Trigger>-->
            <Trigger Property="IsChecked"
             Value="true">
                <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
            </Trigger>

            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border" Value="#212121">

                </Setter>
                <!--<Setter Property="BorderBrush"
              TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource BorderMediumColor}"
                          Offset="0" />
                                <GradientStop Color="Transparent"
                          Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>-->
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="false">
                <Setter Property="Foreground" Value="#ccc">

                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--二级菜单样式-->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
          BorderThickness="0"
                MinWidth="150"
                    Padding="0,6">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="Auto" />

                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                <Rectangle x:Name="CheckMark"
                           Grid.Column="1"
                           Fill="{DynamicResource ThemeBrush}"
                           Width="5"
                           Height="5"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Visibility="Hidden"
                           SnapsToDevicePixels="True"/>
                <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="2"
                        ContentSource="Header"
                        RecognizesAccessKey="True" 
                                  Margin="0,0,0,0"/>
                <!--<TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="0"
                               FontWeight="Normal"
                 DockPanel.Dock="Right" />-->
                <Path Grid.Column="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 0 7 L 4 3.5 Z"
                      Margin="10,0,0,0">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource ThemeColor}" />
                    </Path.Fill>
                </Path>
                <Popup x:Name="Popup"
             Placement="Right"
             HorizontalOffset="0"
                           VerticalOffset="-5"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                Background="White"
                                CornerRadius="0"
                BorderThickness="1"
                                BorderBrush="#ccc"
                                
                                Margin="10">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="11" Opacity="0.2" Direction="218" RenderingBias="Quality" ShadowDepth="1"/>
                        </Border.Effect>
                        <ScrollViewer CanContentScroll="True"
                       >
                            <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
             Value="{x:Null}">
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
             Value="true">
                <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border" Value="{DynamicResource ControlEnterBackgroundBrush}">
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0" />
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="false">
                <Setter Property="Foreground" Value="#ccc">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}"
       TargetType="{x:Type MenuItem}">

        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Style.Triggers>
            <Trigger Property="Role"
             Value="TopLevelHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope"
              Value="true" />
            </Trigger>
            <Trigger Property="Role"
             Value="TopLevelItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
             Value="SubmenuHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
             Value="SubmenuItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
</ResourceDictionary>